/******** DO NOT EDIT THIS FILE ********/
/* 
 * test_joblog.h - structures and function declarations for unit tests
 * of joblog functions.
 * 
 */  
#ifndef _TEST_JOBLOG_H
#define _TEST_JOBLOG_H
#define MUNIT_ENABLE_ASSERT_ALIASES
#include "munit/munit.h"

void* test_setup(const MunitParameter params[], void* user_data);
void test_tear_down(void* fixture);

MunitResult test_joblog_write_cpid0(const MunitParameter params[],
    void* fixture);
MunitResult test_joblog_write_cpid1(const MunitParameter params[],
    void* fixture);
MunitResult test_joblog_write_cpid2(const MunitParameter params[],
    void* fixture);
MunitResult test_joblog_write_cpid3(const MunitParameter params[],
    void* fixture);
MunitResult test_joblog_write_errno(const MunitParameter params[], 
    void* fixture);
MunitResult test_joblog_write_null(const MunitParameter params[], 
    void* fixture);

MunitResult test_joblog_read_cpid0(const MunitParameter params[],
    void* fixture);
MunitResult test_joblog_read_cpid1(const MunitParameter params[],
    void* fixture);
MunitResult test_joblog_read_cpid2(const MunitParameter params[],
    void* fixture);
MunitResult test_joblog_read_cpid3(const MunitParameter params[],
    void* fixture);
MunitResult test_joblog_read_stack(const MunitParameter params[],
    void* fixture);
MunitResult test_joblog_read_rand(const MunitParameter params[],
    void* fixture);
MunitResult test_joblog_read_errno(const MunitParameter params[],
    void* fixture);
MunitResult test_joblog_read_bounds(const MunitParameter params[],
    void* fixture);
MunitResult test_joblog_read_null(const MunitParameter params[],
    void* fixture);

MunitResult test_joblog_delete(const MunitParameter params[],
    void* fixture);

static MunitTest tests[] = {
    { "/test_joblog_write_cpid0", test_joblog_write_cpid0,
        test_setup, test_tear_down, MUNIT_TEST_OPTION_NONE, NULL },
    { "/test_joblog_write_cpid1", test_joblog_write_cpid1,
        test_setup, test_tear_down, MUNIT_TEST_OPTION_NONE, NULL },
    { "/test_joblog_write_cpid2", test_joblog_write_cpid2,
        test_setup, test_tear_down, MUNIT_TEST_OPTION_NONE, NULL },
    { "/test_joblog_write_cpid3", test_joblog_write_cpid3,
        test_setup, test_tear_down, MUNIT_TEST_OPTION_NONE, NULL },
    { "/test_joblog_write_errno", test_joblog_write_errno,
        test_setup, test_tear_down, MUNIT_TEST_OPTION_NONE, NULL },
    { "/test_joblog_write_null", test_joblog_write_null,
        test_setup, test_tear_down, MUNIT_TEST_OPTION_NONE, NULL },

    { "/test_joblog_read_cpid0", test_joblog_read_cpid0,
        test_setup, test_tear_down, MUNIT_TEST_OPTION_NONE, NULL },
    { "/test_joblog_read_cpid1", test_joblog_read_cpid1,
        test_setup, test_tear_down, MUNIT_TEST_OPTION_NONE, NULL },
    { "/test_joblog_read_cpid2", test_joblog_read_cpid2,
        test_setup, test_tear_down, MUNIT_TEST_OPTION_NONE, NULL },
    { "/test_joblog_read_cpid3", test_joblog_read_cpid3,
        test_setup, test_tear_down, MUNIT_TEST_OPTION_NONE, NULL },
    { "/test_joblog_read_stack", test_joblog_read_stack,
        test_setup, test_tear_down, MUNIT_TEST_OPTION_NONE, NULL },
    { "/test_joblog_read_rand", test_joblog_read_rand,
        test_setup, test_tear_down, MUNIT_TEST_OPTION_NONE, NULL },
    { "/test_joblog_read_errno", test_joblog_read_errno,
        test_setup, test_tear_down, MUNIT_TEST_OPTION_NONE, NULL },
    { "/test_joblog_read_bounds", test_joblog_read_bounds,
        test_setup, test_tear_down, MUNIT_TEST_OPTION_NONE, NULL },
    { "/test_joblog_read_null", test_joblog_read_null,
        test_setup, test_tear_down, MUNIT_TEST_OPTION_NONE, NULL },

    { "/test_joblog_delete", test_joblog_delete, test_setup, test_tear_down,
        MUNIT_TEST_OPTION_NONE, NULL },

    { NULL, NULL, NULL, NULL, MUNIT_TEST_OPTION_NONE, NULL},
};

static const MunitSuite suite = {
    "/test_joblog", tests, NULL, 1, MUNIT_SUITE_OPTION_NONE 
};    



#endif