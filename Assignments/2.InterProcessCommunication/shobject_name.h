/******** DO NOT EDIT THIS FILE ********/
#ifndef _SHOBJECT_NAME_H
#define _SHOBJECT_NAME_H

#define SHOBJ_NAME_FMT "/csc2035.%.9s.%.12s"

/*
 * shobject_name(const char* label, char* name_buf)
 * 
 * This is a utility function for consistent naming of shared memory objects.
 * It generates a name for a shared memory object in the format specified by 
 * SHOBJ_NAME_FMT using the given label for the label component. The user
 * component is the current user obtained from the program environment. 
 * If the user name cannot be obtained from the environment, then the name 
 * anon is used.
 * If the user-provided name_buf is not NULL, it is assumed to be a buffer of
 * size MAX_NAME_SIZE and a shared object name string is written to the buffer. 
 * If name_buf is NULL, a name string is dynamically allocated. In this case
 * it is the responsibility of the user of this function to free the memory
 * allocated for the name after they have finished with it.
 *
 * Usage:
 * By providing a char buffer to write the name to:
 * 
 *      char name_buf[MAX_NAME_SIZE];
 *      char* name = shobject_name("app_label", name_buf);   
 *                  // After execution of shobject_name in this example,
 *                  // name and name_buf will be the string: 
 *                  // "/csc2035.<user>.app_label" 
 *                  // where <user> is replaced by the current user
 *                  // see: SHOBJ_NAME_FMT
 *
 * By providing a NULL 2nd parameter to request a dynamically allocated string:
 *
 *      char* name = shobject_name("app_label", NULL);   
 *      ...
 *      ...
 *      free(name); // user must free dynamically allocated string 
 *
 * Parameters:
 * label - the  application specific label for the shared object. If label is 
 *      NULL or the empty string, the label "none" is used. The resulting 
 *      string is truncated if the label would result in a name string 
 *      longer than MAX_NAME_SIZE - 1.
 * name_buf - a buffer of size MAX_NAME_SIZE to write the name to or NULL 
 *      to request a dynamically allocated name.
 *
 * Return:
 * A pointer to the generated name string, which will be a well-formed string
 * of up to MAX_NAME_SIZE size. That is, the string will be at most length
 * MAX_NAME_SIZE - 1, be terminated with a '\0' character, and in the form
 * specified by SHOBJ_NAME_FMT. If the label parameter or user name would
 * result in a string longer than length MAX_NAME_SIZE - 1, then the 
 * string is truncated to length MAX_NAME_SIZE - 1 and, for example, the
 * characters of label that make the string exceed that length are discarded.
 * If a user name cannot be obtained from the environment, then the user name
 * "anon" is used. If label is NULL or the empty string (""), "none" 
 * is used for the label in the name string. For example, if the user 
 * cannot be obtained from the environment and the label is NULL, the name
 * generated will be: "/csc2035.anon.none".
 *
 * If the name_buf parameter is NULL, the return value is a pointer to a
 * dynamically allocated string. If the name_buf parameter is not NULL, 
 * the value of the returned pointer will be the address of name_buf.
 * 
 * Errors:
 * If name_buf is not NULL, it is the responsibility of the user of the 
 * function to ensure name_buf points to a buffer of size MAX_NAME_SIZE bytes. 
 * If the size of the buffer is less than MAX_NAME_SIZE, behaviour is
 * undefined and the calling process may terminate. If the buffer is larger 
 * than MAX_NAME_SIZE bytes, no more than MAX_NAME_SIZE bytes of characters 
 * are written to name_buf including a terminating '\0' character.
 * If name_buf is NULL, the shobject_name function dynamically allocates
 * a buffer of sufficient size and of no more than MAX_NAME_SIZE bytes.
 */
char* shobject_name(const char* label, char* name_buf);

#endif